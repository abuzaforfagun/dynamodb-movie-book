// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.2
// source: src/proto/actor/actor.proto

package actorpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	ActorsService_GetActorBasicInfo_FullMethodName = "/ActorsService/GetActorBasicInfo"
)

// ActorsServiceClient is the client API for ActorsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ActorsServiceClient interface {
	GetActorBasicInfo(ctx context.Context, in *GetActorBasicInforRequestModel, opts ...grpc.CallOption) (*GetActorBasicInforResponseModel, error)
}

type actorsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewActorsServiceClient(cc grpc.ClientConnInterface) ActorsServiceClient {
	return &actorsServiceClient{cc}
}

func (c *actorsServiceClient) GetActorBasicInfo(ctx context.Context, in *GetActorBasicInforRequestModel, opts ...grpc.CallOption) (*GetActorBasicInforResponseModel, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetActorBasicInforResponseModel)
	err := c.cc.Invoke(ctx, ActorsService_GetActorBasicInfo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActorsServiceServer is the server API for ActorsService service.
// All implementations must embed UnimplementedActorsServiceServer
// for forward compatibility
type ActorsServiceServer interface {
	GetActorBasicInfo(context.Context, *GetActorBasicInforRequestModel) (*GetActorBasicInforResponseModel, error)
	mustEmbedUnimplementedActorsServiceServer()
}

// UnimplementedActorsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedActorsServiceServer struct {
}

func (UnimplementedActorsServiceServer) GetActorBasicInfo(context.Context, *GetActorBasicInforRequestModel) (*GetActorBasicInforResponseModel, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActorBasicInfo not implemented")
}
func (UnimplementedActorsServiceServer) mustEmbedUnimplementedActorsServiceServer() {}

// UnsafeActorsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ActorsServiceServer will
// result in compilation errors.
type UnsafeActorsServiceServer interface {
	mustEmbedUnimplementedActorsServiceServer()
}

func RegisterActorsServiceServer(s grpc.ServiceRegistrar, srv ActorsServiceServer) {
	s.RegisterService(&ActorsService_ServiceDesc, srv)
}

func _ActorsService_GetActorBasicInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetActorBasicInforRequestModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActorsServiceServer).GetActorBasicInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ActorsService_GetActorBasicInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActorsServiceServer).GetActorBasicInfo(ctx, req.(*GetActorBasicInforRequestModel))
	}
	return interceptor(ctx, in, info, handler)
}

// ActorsService_ServiceDesc is the grpc.ServiceDesc for ActorsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ActorsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ActorsService",
	HandlerType: (*ActorsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetActorBasicInfo",
			Handler:    _ActorsService_GetActorBasicInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/proto/actor/actor.proto",
}
